{"version":3,"sources":["Visualizer.js","App.js","index.js"],"names":["Visualizer","useState","array","setArray","value","onChange","React","anchorEl","setAnchorEl","handleClose","useEffect","min","max","arr","i","push","Math","floor","random","timeOut","base_arrray","awaitTimeout","delay","Promise","resolve","setTimeout","bubbleSort","a","color","document","getElementsByClassName","length","j","style","backgroundColor","v1","getAttribute","v2","setAttribute","height","temp","allBars","insertionSort","keyDOM","key","k","partition","start","end","pivotValue","pivotIndex","tempVal","tmpValue","QuickSort","index","merge","l","mid","r","n1","n2","b","q","v","mergeSort","parseInt","className","type","radius","target","class","id","margin","onClick","e","preventDefault","window","location","reload","resetArray","Button","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","map","idx","width","display","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"uUAwVeA,MAnVf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCC,IAAML,SAAS,MAA/C,mBAAOM,EAAP,KAAiBC,EAAjB,KAKMC,EAAc,WAClBD,EAAY,OAKdE,qBAAU,WAER,IADA,IAJ6BC,EAAKC,EAI9BC,EAAM,GACDC,EAAI,EAAGA,EAAIV,EAAOU,IACzBD,EAAIE,MANuBJ,EAMI,EANCC,EAME,IAL7BI,KAAKC,MAAMD,KAAKE,UAAYN,EAAMD,EAAM,GAAKA,KAOpDR,EAAS,GAAD,OAAKU,MACZ,CAACT,IAOJ,IAAIe,EAAU,IACVC,EAAW,YAAOlB,GAEhBmB,EAAe,SAACC,GAAD,OACnB,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OAEzCI,EAAU,uCAAG,sCAAAC,EAAA,sDACXC,EAAQC,SAASC,uBAAuB,eACrChB,EAAI,EAFI,YAEDA,EAAIM,EAAYW,QAFf,iBAGNC,EAAI,EAHE,YAGCA,EAAIZ,EAAYW,OAASjB,EAAI,GAH9B,iCAIPO,EAAaF,GAJN,UAKbS,EAAMI,GAAGC,MAAMC,gBAAkB,MACjCN,EAAMI,EAAI,GAAGC,MAAMC,gBAAkB,QACjCd,EAAYY,GAAKZ,EAAYY,EAAI,IAPxB,kCAQLX,EAAaF,GARR,QASPgB,EAAKP,EAAMI,GAAGI,aAAa,SAC3BC,EAAKT,EAAMI,EAAI,GAAGI,aAAa,SACnCR,EAAMI,GAAGM,aAAa,QAASD,GAC/BT,EAAMI,EAAI,GAAGM,aAAa,QAASH,GACnCP,EAAMI,GAAGC,MAAMM,OAAf,UAA2BF,EAA3B,MACAT,EAAMI,EAAI,GAAGC,MAAMM,OAAnB,UAA+BJ,EAA/B,MACIK,EAAOpB,EAAYY,GACvBZ,EAAYY,GAAKZ,EAAYY,EAAI,GACjCZ,EAAYY,EAAI,GAAKQ,EAjBV,yBAmBPnB,EAAaF,GAnBN,QAoBbS,EAAMI,GAAGC,MAAMC,gBAAkB,UACjCN,EAAMI,EAAI,GAAGC,MAAMC,gBAAkB,UArBxB,QAGiCF,IAHjC,wCAuBTX,EAAaF,GAvBJ,QAwBfS,EAAMA,EAAMG,OAASjB,EAAI,GAAGmB,MAAMC,gBAAkB,UAxBrC,QAEuBpB,IAFvB,2DAAH,qDA4BZ2B,EAAUZ,SAASC,uBAAuB,eACxCY,EAAa,uCAAG,oCAAAf,EAAA,sDAEpBc,EAAQ,GAAGR,MAAMC,gBAAkB,oBAC9BpB,EAAI,EAHW,YAGRA,EAAIM,EAAYW,QAHR,wBAIlBU,EAAQ3B,GAAGmB,MAAMC,gBAAkB,WAJjB,SAKZb,EAAaF,GALD,OAMdwB,EAASF,EAAQ3B,GAAGsB,aAAa,SACrCQ,EAAMxB,EAAYN,GAClBkB,EAAIlB,EAAI,EARU,YASXkB,GAAK,GAAKZ,EAAYY,GAAKY,GAThB,wBAUhBH,EAAQT,GAAGC,MAAMC,gBAAkB,WACnCO,EAAQT,EAAI,GAAGM,aAAa,QAASG,EAAQT,GAAGI,aAAa,UAC7DK,EAAQT,EAAI,GAAGC,MAAMM,OAASE,EAAQT,GAAGC,MAAMM,OAC/CnB,EAAYY,EAAI,GAAKZ,EAAYY,GACjCA,GAAQ,EAdQ,UAeVX,EAAaF,GAfH,QAgBhB,IAAS0B,EAAI/B,EAAG+B,GAAK,EAAGA,IACtBJ,EAAQI,GAAGZ,MAAMC,gBAAkB,oBAjBrB,8BAoBlBO,EAAQT,EAAI,GAAGM,aAAa,QAASK,GACrCF,EAAQT,EAAI,GAAGC,MAAMM,OAArB,UAAiCI,EAAjC,MACAvB,EAAYY,EAAI,GAAKY,EAtBH,UAuBZvB,EAAaF,GAvBD,QAwBlBsB,EAAQ3B,GAAGmB,MAAMC,gBAAkB,oBAxBjB,QAGgBpB,IAHhB,2DAAH,qDA9DC,SA0FLgC,EA1FK,kFA0FpB,WAAyBjC,EAAKkC,EAAOC,GAArC,mCAAArB,EAAA,sDACE,IAASb,EAAIiC,EAAOjC,GAAKkC,EAAKlC,IAC5B2B,EAAQ3B,GAAGmB,MAAMC,gBAAkB,UAG/Be,EAAapC,EAAImC,GAEvBP,EADIS,EAAaH,GACGd,MAAMC,gBAAkB,UACnCpB,EAAIiC,EARf,YAQsBjC,EAAIkC,GAR1B,sBASQnC,EAAIC,GAAKmC,GATjB,iCAWY5B,EAAaF,GAXzB,SAYkC,CAACN,EAAIqC,GAAarC,EAAIC,IAAjDD,EAAIC,GAZX,KAYeD,EAAIqC,GAZnB,KAcUV,EAAOC,EAAQ3B,GAAGmB,MAAMM,OACxBY,EAAUV,EAAQ3B,GAAGsB,aAAa,SACtCK,EAAQ3B,GAAGwB,aACT,QACAG,EAAQS,GAAYd,aAAa,UAEnCK,EAAQS,GAAYZ,aAAa,QAASa,GAC1CV,EAAQ3B,GAAGmB,MAAMM,OAASE,EAAQS,GAAYjB,MAAMM,OACpDE,EAAQS,GAAYjB,MAAMM,OAASC,EAEnCC,EAAQS,GAAYjB,MAAMC,gBAAkB,OAC5CgB,IACAT,EAAQS,GAAYjB,MAAMC,gBAAkB,UA1BlD,QAQ+BpB,IAR/B,wCA6BQO,EAAaF,GA7BrB,QA0CE,IA1CF,EA+BkE,CAC9DsB,EAAQO,GAAKf,MAAMM,OACnBE,EAAQS,GAAYjB,MAAMM,QAF3BE,EAAQS,GAAYjB,MAAMM,OA/B7B,KA+BqCE,EAAQO,GAAKf,MAAMM,OA/BxD,KAmCMa,EAAWX,EAAQS,GAAYd,aAAa,SAChDK,EAAQS,GAAYZ,aAClB,QACAG,EAAQO,GAAKZ,aAAa,UAE5BK,EAAQS,GAAYZ,aAAa,QAASc,GAxC5C,EAyCgC,CAACvC,EAAImC,GAAMnC,EAAIqC,IAA5CrC,EAAIqC,GAzCP,KAyCoBrC,EAAImC,GAzCxB,KA0CWH,EAAIE,EAAOF,GAAKG,EAAKH,IACxBA,IAAMK,IACRT,EAAQI,GAAGZ,MAAMC,gBAAkB,QA5CzC,yBA+CSgB,GA/CT,6CA1FoB,+BA4ILG,EA5IK,kFA4IpB,WAAyBnD,EAAO6C,EAAOC,GAAvC,eAAArB,EAAA,2DACMoB,GAASC,GADf,iEAIoBF,EAAU5C,EAAO6C,EAAOC,GAJ5C,cAIMM,EAJN,OAKEb,EAAQa,GAAOrB,MAAMC,gBAAkB,OALzC,SAMQmB,EAAUnD,EAAO6C,EAAOO,EAAQ,GANxC,wBAOQD,EAAUnD,EAAOoD,EAAQ,EAAGN,GAPpC,6CA5IoB,sBAqJpB,IAAMO,EAAK,uCAAG,WAAOrD,EAAOsD,EAAGC,EAAKC,GAAtB,QAAA/B,EAAA,qBAAAA,EAAA,6DACRgC,EAAKF,EAAMD,EAAI,EACfI,EAAKF,EAAID,EACT9B,EAAI,GACJkC,EAAI,GAJI,SAKNxC,EAAaF,GALP,OAMZ,IAASL,EAAI,EAAGA,EAAI6C,EAAI7C,IACtBa,EAAEb,GAAKZ,EAAMsD,EAAI1C,GACjB2B,EAAQe,EAAI1C,GAAGmB,MAAMC,gBAAkB,QAR7B,gBAUNb,EAAaF,GAVP,OAWZ,IAAS2C,EAAI,EAAGA,EAAIF,EAAIE,IACtBD,EAAEC,GAAK5D,EAAMuD,EAAM,EAAIK,GACvBrB,EAAQgB,EAAM,EAAIK,GAAG7B,MAAMC,gBAAkB,OAbnC,iBAeNb,EAAaF,GAfP,eAgBR4C,EAAI,EACJ/B,EAAI,EACJa,EAAIW,EAlBI,UAmBNnC,EAAaF,GAnBP,QAoBZ,KAAO4C,EAAIJ,GAAM3B,EAAI4B,GACfjC,EAAEoC,GAAKF,EAAE7B,IACX9B,EAAM2C,GAAKlB,EAAEoC,GACbtB,EAAQI,GAAGP,aAAa,QAASX,EAAEoC,IACnCtB,EAAQI,GAAGZ,MAAMM,OAAjB,UAA6BZ,EAAEoC,GAA/B,MACAtB,EAAQI,GAAGZ,MAAMC,gBAAkB,QACnCW,IACAkB,MAEA7D,EAAM2C,GAAKgB,EAAE7B,GACbS,EAAQI,GAAGP,aAAa,QAASuB,EAAE7B,IACnCS,EAAQI,GAAGZ,MAAMM,OAAjB,UAA6BsB,EAAE7B,GAA/B,MACAS,EAAQI,GAAGZ,MAAMC,gBAAkB,QACnCW,IACAb,KAGJ,KAAO+B,EAAIJ,GACTzD,EAAM2C,GAAKlB,EAAEoC,GACbtB,EAAQI,GAAGP,aAAa,QAASX,EAAEoC,IACnCtB,EAAQI,GAAGZ,MAAMM,OAAjB,UAA6BZ,EAAEoC,GAA/B,MACAtB,EAAQI,GAAGZ,MAAMC,gBAAkB,QACnCW,IACAkB,IAEF,KAAO/B,EAAI4B,GACT1D,EAAM2C,GAAKgB,EAAE7B,GACbS,EAAQI,GAAGP,aAAa,QAASuB,EAAE7B,IACnCS,EAAQI,GAAGZ,MAAMM,OAAjB,UAA6BsB,EAAE7B,GAA/B,MACAS,EAAQI,GAAGZ,MAAMC,gBAAkB,QACnCW,IACAb,IAnDU,4CAAH,4DAsDLgC,EAAS,uCAAG,WAAO9D,EAAO6C,EAAOC,GAArB,eAAArB,EAAA,sEACVN,EAAaF,GADH,YAEZ4B,GAASC,GAFG,wDAKZS,EAAMQ,SAASlB,GAASC,EAAMD,GAAS,GAC3CN,EAAQgB,GAAKxB,MAAMC,gBAAkB,MANrB,SAOV8B,EAAU9D,EAAO6C,EAAOU,GAPd,wBAQVO,EAAU9D,EAAOuD,EAAM,EAAGT,GARhB,yBASVO,EAAMrD,EAAO6C,EAAOU,EAAKT,GATf,4CAAH,0DAYf,OACE,sBAAKkB,UAAU,aAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uBACEC,KAAK,QACLxD,IAAI,KACJC,IAAI,MACJR,MAAOA,EACPC,SAAU,YAAoC,IAAhB+D,EAAe,EAAhCC,OAAUjE,MACrBC,EAAS+D,IAEXE,MAAM,SACNC,GAAG,YAEL,wBACEtC,MAAO,CAAEuC,OAAQ,OAAQtC,gBAAiB,aAC1CiC,KAAK,SACLM,QAAS,SAACC,GAAD,OAnNnB,SAAoBA,GAClBA,EAAEC,iBACFxE,EAAS,IACTyE,OAAOC,SAASC,QAAO,GAgNCC,CAAWL,IAH7B,4BAQF,sBAAKR,UAAU,WAAf,UACE,cAACc,EAAA,EAAD,CACE,gBAAc,cACd,gBAAc,OACdP,QA9OU,SAACQ,GACnBzE,EAAYyE,EAAMC,gBA8OVjD,MAAO,CAAEL,MAAO,SAJlB,8BAQA,eAACuD,EAAA,EAAD,CACEjB,UAAU,eACVK,GAAG,cACHhE,SAAUA,EACV6E,aAAW,EACXC,KAAMC,QAAQ/E,GACdgF,QAAS9E,EANX,UAQE,cAAC+E,EAAA,EAAD,CAAUf,QAAShE,EAAnB,SACE,wBACEyD,UAAU,SACVC,KAAK,SACLM,QAAS,kBAAM/C,KAHjB,2BAQF,cAAC8D,EAAA,EAAD,CAAUf,QAAShE,EAAnB,SACE,wBAAQ0D,KAAK,SAASM,QAAS,kBAAM/B,KAArC,8BAIF,cAAC8C,EAAA,EAAD,CAAUf,QAAShE,EAAnB,SACE,wBACE0D,KAAK,SACLM,QAAS,kBAAMT,EAAU9D,EAAO,EAAGE,EAAQ,IAF7C,0BAOF,cAACoF,EAAA,EAAD,CAAUf,QAAShE,EAAnB,SACE,wBACEyD,UAAU,QACVC,KAAK,SACLM,QAAS,WACPpB,EAAUnD,EAAO,EAAGE,EAAQ,IAJhC,gCAYN,sBAAK8D,UAAU,gBAAf,UACE,wBAAQA,UAAU,SAASC,KAAK,SAASM,QAAS,kBAAM/C,KAAxD,yBAGA,wBAAQyC,KAAK,SAASM,QAAS,kBAAM/B,KAArC,4BAGA,wBAAQyB,KAAK,SAASM,QAAS,kBAAMT,EAAU9D,EAAO,EAAGE,EAAQ,IAAjE,wBAGA,wBACE8D,UAAU,QACVC,KAAK,SACLM,QAAS,WACPpB,EAAUnD,EAAO,EAAGE,EAAQ,IAJhC,8BAYJ,qBAAK8D,UAAU,QAAf,SACGhE,EAAMuF,KAAI,SAACrF,EAAOsF,GACjB,OACE,qBACExB,UAAU,cACVjC,MAAO,CACL0D,MAAO,MACPC,QAAS,eACTpB,OAAQ,UACRjC,OAAO,GAAD,OAAKnC,EAAL,MACN8B,gBAAiB,QAGnB9B,MAAOA,GADFsF,QAMb,qBAAKxB,UAAU,aAAf,SACE,4CACa,+BAAO9D,aCvUbyF,MARf,WACE,OACE,qBAAK3B,UAAU,MAAf,SACE,cAAC,EAAD,OCAN4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnE,SAASoE,eAAe,W","file":"static/js/main.413110d6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Visualizer.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nfunction Visualizer() {\r\n  const [array, setArray] = useState([]);\r\n  const [value, onChange] = useState(25);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  function randomIntFromInterval(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n  useEffect(() => {\r\n    let arr = [];\r\n    for (let i = 0; i < value; i++) {\r\n      arr.push(randomIntFromInterval(5, 500));\r\n    }\r\n    setArray([...arr]);\r\n  }, [value]);\r\n\r\n  function resetArray(e) {\r\n    e.preventDefault();\r\n    setArray([]);\r\n    window.location.reload(false);\r\n  }\r\n  var timeOut = 200; //Delay in time for all sorting algorithms.\r\n  var base_arrray = [...array]; //Common arrray for all sorting algorithms.\r\n  //Promise method to wait for promise to return.\r\n  const awaitTimeout = (delay) =>\r\n    new Promise((resolve) => setTimeout(resolve, delay));\r\n  //BUBBLE SORT\r\n  const bubbleSort = async () => {\r\n    const color = document.getElementsByClassName(\"randomArray\");\r\n    for (var i = 0; i < base_arrray.length; i++) {\r\n      for (var j = 0; j < base_arrray.length - i - 1; j++) {\r\n        await awaitTimeout(timeOut);\r\n        color[j].style.backgroundColor = \"red\";\r\n        color[j + 1].style.backgroundColor = \"red\";\r\n        if (base_arrray[j] > base_arrray[j + 1]) {\r\n          await awaitTimeout(timeOut);\r\n          var v1 = color[j].getAttribute(\"value\");\r\n          var v2 = color[j + 1].getAttribute(\"value\");\r\n          color[j].setAttribute(\"value\", v2);\r\n          color[j + 1].setAttribute(\"value\", v1);\r\n          color[j].style.height = `${v2}px`;\r\n          color[j + 1].style.height = `${v1}px`;\r\n          var temp = base_arrray[j];\r\n          base_arrray[j] = base_arrray[j + 1];\r\n          base_arrray[j + 1] = temp;\r\n        }\r\n        await awaitTimeout(timeOut);\r\n        color[j].style.backgroundColor = \"#6b5b95\";\r\n        color[j + 1].style.backgroundColor = \"#6b5b95\";\r\n      }\r\n      await awaitTimeout(timeOut);\r\n      color[color.length - i - 1].style.backgroundColor = \"#13CE66\";\r\n    }\r\n  };\r\n  //Insertion Sort\r\n  var allBars = document.getElementsByClassName(\"randomArray\");\r\n  const insertionSort = async () => {\r\n    var i, key, j;\r\n    allBars[0].style.backgroundColor = \" rgb(49, 226, 13)\";\r\n    for (i = 1; i < base_arrray.length; i++) {\r\n      allBars[i].style.backgroundColor = \"darkblue\";\r\n      await awaitTimeout(timeOut);\r\n      var keyDOM = allBars[i].getAttribute(\"value\");\r\n      key = base_arrray[i];\r\n      j = i - 1;\r\n      while (j >= 0 && base_arrray[j] > key) {\r\n        allBars[j].style.backgroundColor = \"darkblue\";\r\n        allBars[j + 1].setAttribute(\"value\", allBars[j].getAttribute(\"value\"));\r\n        allBars[j + 1].style.height = allBars[j].style.height;\r\n        base_arrray[j + 1] = base_arrray[j];\r\n        j = j - 1;\r\n        await awaitTimeout(timeOut);\r\n        for (var k = i; k >= 0; k--) {\r\n          allBars[k].style.backgroundColor = \" rgb(49, 226, 13)\";\r\n        }\r\n      }\r\n      allBars[j + 1].setAttribute(\"value\", keyDOM);\r\n      allBars[j + 1].style.height = `${keyDOM}px`;\r\n      base_arrray[j + 1] = key;\r\n      await awaitTimeout(timeOut);\r\n      allBars[i].style.backgroundColor = \" rgb(49, 226, 13)\";\r\n    }\r\n  };\r\n  //Quick Sort\r\n  async function partition(arr, start, end) {\r\n    for (var i = start; i <= end; i++) {\r\n      allBars[i].style.backgroundColor = \"#D6FFB7\";\r\n    }\r\n    // Taking the last element as the pivot\r\n    const pivotValue = arr[end];\r\n    let pivotIndex = start;\r\n    allBars[pivotIndex].style.backgroundColor = \"#E0777D\";\r\n    for (let i = start; i < end; i++) {\r\n      if (arr[i] < pivotValue) {\r\n        // Swapping elements\r\n        await awaitTimeout(timeOut);\r\n        [arr[i], arr[pivotIndex]] = [arr[pivotIndex], arr[i]];\r\n\r\n        var temp = allBars[i].style.height;\r\n        var tempVal = allBars[i].getAttribute(\"value\");\r\n        allBars[i].setAttribute(\r\n          \"value\",\r\n          allBars[pivotIndex].getAttribute(\"value\")\r\n        );\r\n        allBars[pivotIndex].setAttribute(\"value\", tempVal);\r\n        allBars[i].style.height = allBars[pivotIndex].style.height;\r\n        allBars[pivotIndex].style.height = temp;\r\n        // Moving to next element\r\n        allBars[pivotIndex].style.backgroundColor = \"teal\";\r\n        pivotIndex++;\r\n        allBars[pivotIndex].style.backgroundColor = \"#E0777D\";\r\n      }\r\n    }\r\n    await awaitTimeout(timeOut);\r\n    // Putting the pivot value in the middle\r\n    [allBars[pivotIndex].style.height, allBars[end].style.height] = [\r\n      allBars[end].style.height,\r\n      allBars[pivotIndex].style.height,\r\n    ];\r\n    var tmpValue = allBars[pivotIndex].getAttribute(\"value\");\r\n    allBars[pivotIndex].setAttribute(\r\n      \"value\",\r\n      allBars[end].getAttribute(\"value\")\r\n    );\r\n    allBars[pivotIndex].setAttribute(\"value\", tmpValue);\r\n    [arr[pivotIndex], arr[end]] = [arr[end], arr[pivotIndex]];\r\n    for (var k = start; k <= end; k++) {\r\n      if (k !== pivotIndex) {\r\n        allBars[k].style.backgroundColor = \"teal\";\r\n      }\r\n    }\r\n    return pivotIndex;\r\n  }\r\n  //Quick Sort main function\r\n  async function QuickSort(array, start, end) {\r\n    if (start >= end) {\r\n      return;\r\n    }\r\n    let index = await partition(array, start, end);\r\n    allBars[index].style.backgroundColor = \"teal\";\r\n    await QuickSort(array, start, index - 1);\r\n    await QuickSort(array, index + 1, end);\r\n  }\r\n  const merge = async (array, l, mid, r) => {\r\n    var n1 = mid - l + 1;\r\n    var n2 = r - mid;\r\n    var a = [];\r\n    var b = [];\r\n    await awaitTimeout(timeOut);\r\n    for (var i = 0; i < n1; i++) {\r\n      a[i] = array[l + i];\r\n      allBars[l + i].style.backgroundColor = \"black\";\r\n    }\r\n    await awaitTimeout(timeOut);\r\n    for (var q = 0; q < n2; q++) {\r\n      b[q] = array[mid + 1 + q];\r\n      allBars[mid + 1 + q].style.backgroundColor = \"grey\";\r\n    }\r\n    await awaitTimeout(timeOut);\r\n    var v = 0;\r\n    var j = 0;\r\n    var k = l;\r\n    await awaitTimeout(timeOut);\r\n    while (v < n1 && j < n2) {\r\n      if (a[v] < b[j]) {\r\n        array[k] = a[v];\r\n        allBars[k].setAttribute(\"value\", a[v]);\r\n        allBars[k].style.height = `${a[v]}px`;\r\n        allBars[k].style.backgroundColor = \"green\";\r\n        k++;\r\n        v++;\r\n      } else {\r\n        array[k] = b[j];\r\n        allBars[k].setAttribute(\"value\", b[j]);\r\n        allBars[k].style.height = `${b[j]}px`;\r\n        allBars[k].style.backgroundColor = \"green\";\r\n        k++;\r\n        j++;\r\n      }\r\n    }\r\n    while (v < n1) {\r\n      array[k] = a[v];\r\n      allBars[k].setAttribute(\"value\", a[v]);\r\n      allBars[k].style.height = `${a[v]}px`;\r\n      allBars[k].style.backgroundColor = \"green\";\r\n      k++;\r\n      v++;\r\n    }\r\n    while (j < n2) {\r\n      array[k] = b[j];\r\n      allBars[k].setAttribute(\"value\", b[j]);\r\n      allBars[k].style.height = `${b[j]}px`;\r\n      allBars[k].style.backgroundColor = \"green\";\r\n      k++;\r\n      j++;\r\n    }\r\n  };\r\n  const mergeSort = async (array, start, end) => {\r\n    await awaitTimeout(timeOut);\r\n    if (start >= end) {\r\n      return;\r\n    }\r\n    var mid = parseInt(start + (end - start) / 2);\r\n    allBars[mid].style.backgroundColor = \"red\";\r\n    await mergeSort(array, start, mid);\r\n    await mergeSort(array, mid + 1, end);\r\n    await merge(array, start, mid, end);\r\n  };\r\n\r\n  return (\r\n    <div className=\"visualizer\">\r\n      <div className=\"navbar\">\r\n        <div className=\"base__buttons\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"25\"\r\n            max=\"200\"\r\n            value={value}\r\n            onChange={({ target: { value: radius } }) => {\r\n              onChange(radius);\r\n            }}\r\n            class=\"slider\"\r\n            id=\"myRange\"\r\n          />\r\n          <button\r\n            style={{ margin: \"20px\", backgroundColor: \"#D9514EFF\" }}\r\n            type=\"submit\"\r\n            onClick={(e) => resetArray(e)}\r\n          >\r\n            Reset Array\r\n          </button>\r\n        </div>\r\n        <div className=\"dropdown\">\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n            style={{ color: \"white\" }}\r\n          >\r\n            Open Menu ▼\r\n          </Button>\r\n          <Menu\r\n            className=\"dropdown_btn\"\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={handleClose}>\r\n              <button\r\n                className=\"bubble\"\r\n                type=\"submit\"\r\n                onClick={() => bubbleSort()}\r\n              >\r\n                Bubble Sort\r\n              </button>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose}>\r\n              <button type=\"submit\" onClick={() => insertionSort()}>\r\n                Insertion Sort\r\n              </button>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose}>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => mergeSort(array, 0, value - 1)}\r\n              >\r\n                Merge Sort\r\n              </button>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose}>\r\n              <button\r\n                className=\"merge\"\r\n                type=\"submit\"\r\n                onClick={() => {\r\n                  QuickSort(array, 0, value - 1);\r\n                }}\r\n              >\r\n                Quick Sort\r\n              </button>\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n        <div className=\"sort__buttons\">\r\n          <button className=\"bubble\" type=\"submit\" onClick={() => bubbleSort()}>\r\n            Bubble Sort\r\n          </button>\r\n          <button type=\"submit\" onClick={() => insertionSort()}>\r\n            Insertion Sort\r\n          </button>\r\n          <button type=\"submit\" onClick={() => mergeSort(array, 0, value - 1)}>\r\n            Merge Sort\r\n          </button>\r\n          <button\r\n            className=\"merge\"\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              QuickSort(array, 0, value - 1);\r\n            }}\r\n          >\r\n            Quick Sort\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"array\">\r\n        {array.map((value, idx) => {\r\n          return (\r\n            <div\r\n              className=\"randomArray\"\r\n              style={{\r\n                width: \"2vw\",\r\n                display: \"inline-block\",\r\n                margin: \"0 0.5px\",\r\n                height: `${value}px`,\r\n                backgroundColor: \"teal\",\r\n              }}\r\n              key={idx}\r\n              value={value}\r\n            ></div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"array_size\">\r\n        <p>\r\n          Array Size:<span>{value}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Visualizer;\r\n","import \"./App.css\";\nimport Visualizer from \"./Visualizer\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Visualizer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}